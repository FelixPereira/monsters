{"version":3,"sources":["Components/Filter/Input.js","Components/Monsters/card/card.js","Components/Monsters/card-list/card-list.js","App.js","reportWebVitals.js","index.js"],"names":["inputFilter","props","onChange","filterHandler","className","type","placeholder","card","src","monster","id","alt","name","nome","email","cardList","monsters","map","App","state","filterTerm","e","setState","target","value","fetch","then","response","json","data","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAgBeA,EAbK,SAAAC,GAClB,OACE,+BACE,uBACEC,SAAWD,EAAME,cACjBC,UAAU,SACVC,KAAK,SACLC,YAAY,sBCILC,G,YAVF,SAAAN,GACX,OACE,0BAASG,UAAU,iBAAnB,UACE,qBAAKI,IAAG,+BAA0BP,EAAMQ,QAAQC,GAAxC,0BAAoEC,IAAMV,EAAMQ,QAAQG,OAChG,mCAAOX,EAAMQ,QAAQI,KAArB,OACA,kCAAMZ,EAAMQ,QAAQK,MAApB,YCOSC,EAZE,SAAAd,GACb,OACI,qBAAKG,UAAU,YAAf,SAEEH,EAAMe,SAASC,KAAI,SAAAR,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJzBQ,E,4MACJC,MAAQ,CACNH,SAAU,GACVI,WAAY,I,EASdjB,cAAgB,SAACkB,GACf,EAAKC,SAAS,CAAEF,WAAYC,EAAEE,OAAOC,S,uDAPvC,WAAqB,IAAD,OAClBC,MAAM,+BACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKP,SAAU,CAAEN,SAAUa,S,oBAO3C,WACE,MAA+BC,KAAKX,MAA7BH,EAAP,EAAOA,SAAUI,EAAjB,EAAiBA,WACXW,EAAmBf,EAASgB,QAAO,SAAAvB,GAAO,OAAIA,EAAQI,KAAKoB,cAAcC,SAASd,EAAWa,kBACnG,OACE,sBAAK7B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CAAaD,cAAgB2B,KAAK3B,gBAClC,cAAC,EAAD,CAAUa,SAAWe,W,GAvBXI,aA8BHjB,ICvBAkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.63c2e524.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Input.css';\r\n\r\nconst inputFilter = props => {\r\n  return(\r\n    <form>\r\n      <input \r\n        onChange={ props.filterHandler }\r\n        className='search'\r\n        type='search'\r\n        placeholder='Find a monster'\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default inputFilter;","import React from 'react';\r\nimport './card-styles.css';\r\nimport '../card-list/card-list';\r\n\r\nconst card = props => {\r\n  return(\r\n    <article className='card-container'> \r\n      <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt={ props.monster.name}/>\r\n      <h2> { props.monster.nome } </h2>\r\n      <p> { props.monster.email } </p>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default card;\r\n","import React from 'react';\r\nimport './card-list.css';\r\nimport Card from  '../card/card';\r\n\r\nconst cardList = props => {\r\n    return(\r\n        <div className='card-list'>\r\n        {\r\n          props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster} />\r\n          ))\r\n        }\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default cardList;","import React, { Component } from 'react';\nimport './App.css';\nimport InputFilter from './Components/Filter/Input';\nimport CardList from './Components/Monsters/card-list/card-list';\n\nclass App extends Component {\n  state = {\n    monsters: [],\n    filterTerm: ''\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/users')\n    .then(response => response.json())\n    .then(data => this.setState( { monsters: data} ))\n  }\n\n  filterHandler = (e) => {\n    this.setState({ filterTerm: e.target.value });\n  }\n\n  render() {\n    const {monsters, filterTerm} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.nome.toLowerCase().includes(filterTerm.toLowerCase()));\n    return(\n      <div className='App'>\n        <h1> Monsters Roladex </h1>\n        <InputFilter filterHandler={ this.filterHandler } />\n        <CardList monsters={ filteredMonsters } />\n      </div>\n\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}